import{b as u,c as y,d as f,e as p}from"./chunk-RSZXG5PP.min.js";import{b as m,e as g,h as d}from"./chunk-IDQ2RCY2.min.js";import{c as s}from"./chunk-QZZKR5JD.min.js";import{K as l,y as n}from"./chunk-3EE2TK35.min.js";import{b as o,d as a}from"./chunk-6TVUEPFY.min.js";var h={common:l,getConfig:n,insertCluster:g,insertEdge:f,insertEdgeLabel:u,insertMarkers:p,insertNode:d,interpolateToCurve:s,labelHelper:m,log:a,positionEdgeLabel:y},t={},L=o(r=>{for(let e of r)t[e.name]=e},"registerLayoutLoaders"),w=o(()=>{L([{name:"dagre",loader:o(async()=>await import("./dagre-6UL2VRFP-I4QKSU5B.min.js"),"loader")},{name:"cose-bilkent",loader:o(async()=>await import("./cose-bilkent-S5V4N54A-HENZWBLB.min.js"),"loader")}])},"registerDefaultLayoutLoaders");w();var _=o(async(r,e)=>{if(!(r.layoutAlgorithm in t))throw new Error(`Unknown layout algorithm: ${r.layoutAlgorithm}`);let i=t[r.layoutAlgorithm];return(await i.loader()).render(r,e,h,{algorithm:i.algorithm})},"render"),C=o((r="",{fallback:e="dagre"}={})=>{if(r in t)return r;if(e in t)return a.warn(`Layout algorithm ${r} is not registered. Using ${e} as fallback.`),e;throw new Error(`Both layout algorithms ${r} and ${e} are not registered.`)},"getRegisteredLayoutAlgorithm");export{L as a,_ as b,C as c};
//# sourceMappingURL=chunk-VTDY5BYI.min.js.map
