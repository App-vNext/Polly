{
  "version": 3,
  "sources": ["../../node_modules/mermaid/dist/chunks/mermaid.core/chunk-ATLVNIR6.mjs"],
  "sourcesContent": ["import {\n  getConfig2 as getConfig\n} from \"./chunk-ABZYJK2D.mjs\";\nimport {\n  __name\n} from \"./chunk-AGHRB4JF.mjs\";\n\n// src/rendering-util/rendering-elements/shapes/handDrawnShapeStyles.ts\nvar solidStateFill = /* @__PURE__ */ __name((color) => {\n  const { handDrawnSeed } = getConfig();\n  return {\n    fill: color,\n    hachureAngle: 120,\n    // angle of hachure,\n    hachureGap: 4,\n    fillWeight: 2,\n    roughness: 0.7,\n    stroke: color,\n    seed: handDrawnSeed\n  };\n}, \"solidStateFill\");\nvar compileStyles = /* @__PURE__ */ __name((node) => {\n  const stylesMap = styles2Map([\n    ...node.cssCompiledStyles || [],\n    ...node.cssStyles || [],\n    ...node.labelStyle || []\n  ]);\n  return { stylesMap, stylesArray: [...stylesMap] };\n}, \"compileStyles\");\nvar styles2Map = /* @__PURE__ */ __name((styles) => {\n  const styleMap = /* @__PURE__ */ new Map();\n  styles.forEach((style) => {\n    const [key, value] = style.split(\":\");\n    styleMap.set(key.trim(), value?.trim());\n  });\n  return styleMap;\n}, \"styles2Map\");\nvar isLabelStyle = /* @__PURE__ */ __name((key) => {\n  return key === \"color\" || key === \"font-size\" || key === \"font-family\" || key === \"font-weight\" || key === \"font-style\" || key === \"text-decoration\" || key === \"text-align\" || key === \"text-transform\" || key === \"line-height\" || key === \"letter-spacing\" || key === \"word-spacing\" || key === \"text-shadow\" || key === \"text-overflow\" || key === \"white-space\" || key === \"word-wrap\" || key === \"word-break\" || key === \"overflow-wrap\" || key === \"hyphens\";\n}, \"isLabelStyle\");\nvar styles2String = /* @__PURE__ */ __name((node) => {\n  const { stylesArray } = compileStyles(node);\n  const labelStyles = [];\n  const nodeStyles = [];\n  const borderStyles = [];\n  const backgroundStyles = [];\n  stylesArray.forEach((style) => {\n    const key = style[0];\n    if (isLabelStyle(key)) {\n      labelStyles.push(style.join(\":\") + \" !important\");\n    } else {\n      nodeStyles.push(style.join(\":\") + \" !important\");\n      if (key.includes(\"stroke\")) {\n        borderStyles.push(style.join(\":\") + \" !important\");\n      }\n      if (key === \"fill\") {\n        backgroundStyles.push(style.join(\":\") + \" !important\");\n      }\n    }\n  });\n  return {\n    labelStyles: labelStyles.join(\";\"),\n    nodeStyles: nodeStyles.join(\";\"),\n    stylesArray,\n    borderStyles,\n    backgroundStyles\n  };\n}, \"styles2String\");\nvar userNodeOverrides = /* @__PURE__ */ __name((node, options) => {\n  const { themeVariables, handDrawnSeed } = getConfig();\n  const { nodeBorder, mainBkg } = themeVariables;\n  const { stylesMap } = compileStyles(node);\n  const result = Object.assign(\n    {\n      roughness: 0.7,\n      fill: stylesMap.get(\"fill\") || mainBkg,\n      fillStyle: \"hachure\",\n      // solid fill\n      fillWeight: 4,\n      hachureGap: 5.2,\n      stroke: stylesMap.get(\"stroke\") || nodeBorder,\n      seed: handDrawnSeed,\n      strokeWidth: stylesMap.get(\"stroke-width\")?.replace(\"px\", \"\") || 1.3,\n      fillLineDash: [0, 0],\n      strokeLineDash: getStrokeDashArray(stylesMap.get(\"stroke-dasharray\"))\n    },\n    options\n  );\n  return result;\n}, \"userNodeOverrides\");\nvar getStrokeDashArray = /* @__PURE__ */ __name((strokeDasharrayStyle) => {\n  if (!strokeDasharrayStyle) {\n    return [0, 0];\n  }\n  const dashArray = strokeDasharrayStyle.trim().split(/\\s+/).map(Number);\n  if (dashArray.length === 1) {\n    const val = isNaN(dashArray[0]) ? 0 : dashArray[0];\n    return [val, val];\n  }\n  const first = isNaN(dashArray[0]) ? 0 : dashArray[0];\n  const second = isNaN(dashArray[1]) ? 0 : dashArray[1];\n  return [first, second];\n}, \"getStrokeDashArray\");\n\nexport {\n  solidStateFill,\n  compileStyles,\n  isLabelStyle,\n  styles2String,\n  userNodeOverrides\n};\n"],
  "mappings": "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",
  "names": ["solidStateFill", "__name", "color", "handDrawnSeed", "getConfig2", "compileStyles", "node", "stylesMap", "styles2Map", "styles", "styleMap", "style", "key", "value", "isLabelStyle", "styles2String", "stylesArray", "labelStyles", "nodeStyles", "borderStyles", "backgroundStyles", "userNodeOverrides", "options", "themeVariables", "nodeBorder", "mainBkg", "getStrokeDashArray", "strokeDasharrayStyle", "dashArray", "val", "first", "second"]
}
