name: on-push-do-docs

on:
  push:
    branches: [ main ]
    paths: [ "src/Snippets/**" ]
  workflow_dispatch:

permissions: {}

jobs:
  update-docs:
    name: update-docs
    runs-on: ubuntu-latest
    if: github.event.repository.fork == false

    steps:

      - name: Generate GitHub application token
        id: generate-application-token
        uses: peter-murray/workflow-application-token-action@d17e3a9a36850ea89f35db16c1067dd2b68ee343 # v4.0.1
        with:
          application_id: ${{ secrets.POLLY_UPDATER_BOT_APP_ID }}
          application_private_key: ${{ secrets.POLLY_UPDATER_BOT_KEY }}
          permissions: 'contents:write, pull_requests:write'

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          filter: 'tree:0'
          show-progress: false
          token: ${{ steps.generate-application-token.outputs.token }}

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1

      - name: Update documentation
        id: update-docs
        shell: pwsh
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: true
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
          GIT_COMMIT_USER_EMAIL: '138034000+polly-updater-bot[bot]@users.noreply.github.com'
          GIT_COMMIT_USER_NAME: 'polly-updater-bot[bot]'
        run: |
          $ErrorActionPreference = "Stop"
          $ProgressPreference = "SilentlyContinue"

          dotnet tool restore
          dotnet mdsnippets

          $GitStatus = (git status --porcelain)
          if ([string]::IsNullOrEmpty($GitStatus)) {
            Write-Output "No changes to commit."
            exit 0
          }

          $TimeStamp = Get-Date -Format "yyyy-MM-dd-HH-mm"
          $BranchName = "docs/update-docs-$TimeStamp"
          "branchName=$BranchName" >> ${env:GITHUB_OUTPUT}

          git config user.email ${env:GIT_COMMIT_USER_EMAIL} | Out-Null
          git config user.name ${env:GIT_COMMIT_USER_NAME} | Out-Null
          git remote set-url "${env:GITHUB_SERVER_URL}/${env:GITHUB_REPOSITORY}.git" | Out-Null
          git fetch origin | Out-Null
          git rev-parse --verify --quiet ("remotes/origin/" + $BranchName) | Out-Null

          if ($LASTEXITCODE -eq 0) {
            Write-Output "Branch $BranchName already exists."
            exit 0
          }

          git checkout -b $BranchName
          git add .
          git commit -m "Update the code-snippets in the documentation"
          git push -u origin $BranchName
          "updated-docs=true" >> ${env:GITHUB_OUTPUT}

      - name: Create pull request
        if: steps.update-docs.outputs.updated-docs == 'true'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          BRANCH_NAME: ${{ steps.update-docs.outputs.branchName }}
        with:
          github-token: ${{ steps.generate-application-token.outputs.token }}
          script: |
            const { repo, owner } = context.repo;
            const workflowUrl = `${process.env.GITHUB_SERVER_URL}/${owner}/${repo}/actions/runs/${process.env.GITHUB_RUN_ID}`;
            await github.rest.pulls.create({
              title: 'Update the code-snippets in the documentation',
              owner,
              repo,
              head: process.env.BRANCH_NAME,
              base: 'main',
              body: [
                'This PR updates the code-snippets in the documentation.',
                '',
                `This pull request was generated by [GitHub Actions](${workflowUrl}).`
              ].join('\n')
            });
