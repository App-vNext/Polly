#nullable enable
Polly.RateLimiterCompositeStrategyBuilderExtensions
Polly.RateLimiting.OnRateLimiterRejectedArguments
Polly.RateLimiting.OnRateLimiterRejectedArguments.Context.get -> Polly.ResilienceContext!
Polly.RateLimiting.OnRateLimiterRejectedArguments.Lease.get -> System.Threading.RateLimiting.RateLimitLease!
Polly.RateLimiting.OnRateLimiterRejectedArguments.OnRateLimiterRejectedArguments(Polly.ResilienceContext! context, System.Threading.RateLimiting.RateLimitLease! lease, System.TimeSpan? retryAfter) -> void
Polly.RateLimiting.OnRateLimiterRejectedArguments.RetryAfter.get -> System.TimeSpan?
Polly.RateLimiting.RateLimiterRejectedException
Polly.RateLimiting.RateLimiterRejectedException.RateLimiterRejectedException() -> void
Polly.RateLimiting.RateLimiterRejectedException.RateLimiterRejectedException(string! message) -> void
Polly.RateLimiting.RateLimiterRejectedException.RateLimiterRejectedException(string! message, System.Exception! inner) -> void
Polly.RateLimiting.RateLimiterRejectedException.RateLimiterRejectedException(string! message, System.TimeSpan retryAfter) -> void
Polly.RateLimiting.RateLimiterRejectedException.RateLimiterRejectedException(string! message, System.TimeSpan retryAfter, System.Exception! inner) -> void
Polly.RateLimiting.RateLimiterRejectedException.RateLimiterRejectedException(System.TimeSpan retryAfter) -> void
Polly.RateLimiting.RateLimiterRejectedException.RetryAfter.get -> System.TimeSpan?
Polly.RateLimiting.RateLimiterStrategyOptions
Polly.RateLimiting.RateLimiterStrategyOptions.DefaultRateLimiterOptions.get -> System.Threading.RateLimiting.ConcurrencyLimiterOptions!
Polly.RateLimiting.RateLimiterStrategyOptions.DefaultRateLimiterOptions.set -> void
Polly.RateLimiting.RateLimiterStrategyOptions.OnRejected.get -> System.Func<Polly.RateLimiting.OnRateLimiterRejectedArguments!, System.Threading.Tasks.ValueTask>?
Polly.RateLimiting.RateLimiterStrategyOptions.OnRejected.set -> void
Polly.RateLimiting.RateLimiterStrategyOptions.RateLimiter.get -> Polly.RateLimiting.ResilienceRateLimiter?
Polly.RateLimiting.RateLimiterStrategyOptions.RateLimiter.set -> void
Polly.RateLimiting.RateLimiterStrategyOptions.RateLimiterStrategyOptions() -> void
Polly.RateLimiting.ResilienceRateLimiter
static Polly.RateLimiterCompositeStrategyBuilderExtensions.AddConcurrencyLimiter(this Polly.CompositeStrategyBuilder! builder, int permitLimit, int queueLimit = 0) -> Polly.CompositeStrategyBuilder!
static Polly.RateLimiterCompositeStrategyBuilderExtensions.AddConcurrencyLimiter(this Polly.CompositeStrategyBuilder! builder, System.Threading.RateLimiting.ConcurrencyLimiterOptions! options) -> Polly.CompositeStrategyBuilder!
static Polly.RateLimiterCompositeStrategyBuilderExtensions.AddConcurrencyLimiter<TResult>(this Polly.CompositeStrategyBuilder<TResult>! builder, int permitLimit, int queueLimit = 0) -> Polly.CompositeStrategyBuilder<TResult>!
static Polly.RateLimiterCompositeStrategyBuilderExtensions.AddConcurrencyLimiter<TResult>(this Polly.CompositeStrategyBuilder<TResult>! builder, System.Threading.RateLimiting.ConcurrencyLimiterOptions! options) -> Polly.CompositeStrategyBuilder<TResult>!
static Polly.RateLimiterCompositeStrategyBuilderExtensions.AddRateLimiter(this Polly.CompositeStrategyBuilder! builder, Polly.RateLimiting.RateLimiterStrategyOptions! options) -> Polly.CompositeStrategyBuilder!
static Polly.RateLimiterCompositeStrategyBuilderExtensions.AddRateLimiter(this Polly.CompositeStrategyBuilder! builder, System.Threading.RateLimiting.RateLimiter! limiter) -> Polly.CompositeStrategyBuilder!
static Polly.RateLimiterCompositeStrategyBuilderExtensions.AddRateLimiter<TResult>(this Polly.CompositeStrategyBuilder<TResult>! builder, Polly.RateLimiting.RateLimiterStrategyOptions! options) -> Polly.CompositeStrategyBuilder<TResult>!
static Polly.RateLimiterCompositeStrategyBuilderExtensions.AddRateLimiter<TResult>(this Polly.CompositeStrategyBuilder<TResult>! builder, System.Threading.RateLimiting.RateLimiter! limiter) -> Polly.CompositeStrategyBuilder<TResult>!
static Polly.RateLimiting.ResilienceRateLimiter.Create(System.Threading.RateLimiting.PartitionedRateLimiter<Polly.ResilienceContext!>! rateLimiter) -> Polly.RateLimiting.ResilienceRateLimiter!
static Polly.RateLimiting.ResilienceRateLimiter.Create(System.Threading.RateLimiting.RateLimiter! rateLimiter) -> Polly.RateLimiting.ResilienceRateLimiter!
