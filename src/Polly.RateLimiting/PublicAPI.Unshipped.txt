#nullable enable
Polly.RateLimiterResiliencePipelineBuilderExtensions
Polly.RateLimiting.OnRateLimiterRejectedArguments
Polly.RateLimiting.OnRateLimiterRejectedArguments.Context.get -> Polly.ResilienceContext!
Polly.RateLimiting.OnRateLimiterRejectedArguments.Lease.get -> System.Threading.RateLimiting.RateLimitLease!
Polly.RateLimiting.OnRateLimiterRejectedArguments.OnRateLimiterRejectedArguments() -> void
Polly.RateLimiting.OnRateLimiterRejectedArguments.OnRateLimiterRejectedArguments(Polly.ResilienceContext! context, System.Threading.RateLimiting.RateLimitLease! lease) -> void
Polly.RateLimiting.RateLimiterArguments
Polly.RateLimiting.RateLimiterArguments.Context.get -> Polly.ResilienceContext!
Polly.RateLimiting.RateLimiterArguments.RateLimiterArguments() -> void
Polly.RateLimiting.RateLimiterArguments.RateLimiterArguments(Polly.ResilienceContext! context) -> void
Polly.RateLimiting.RateLimiterRejectedException
Polly.RateLimiting.RateLimiterRejectedException.RateLimiterRejectedException() -> void
Polly.RateLimiting.RateLimiterRejectedException.RateLimiterRejectedException(string! message) -> void
Polly.RateLimiting.RateLimiterRejectedException.RateLimiterRejectedException(string! message, System.Exception! inner) -> void
Polly.RateLimiting.RateLimiterRejectedException.RateLimiterRejectedException(string! message, System.TimeSpan retryAfter) -> void
Polly.RateLimiting.RateLimiterRejectedException.RateLimiterRejectedException(string! message, System.TimeSpan retryAfter, System.Exception! inner) -> void
Polly.RateLimiting.RateLimiterRejectedException.RateLimiterRejectedException(System.TimeSpan retryAfter) -> void
Polly.RateLimiting.RateLimiterRejectedException.RetryAfter.get -> System.TimeSpan?
Polly.RateLimiting.RateLimiterStrategyOptions
Polly.RateLimiting.RateLimiterStrategyOptions.DefaultRateLimiterOptions.get -> System.Threading.RateLimiting.ConcurrencyLimiterOptions!
Polly.RateLimiting.RateLimiterStrategyOptions.DefaultRateLimiterOptions.set -> void
Polly.RateLimiting.RateLimiterStrategyOptions.OnRejected.get -> System.Func<Polly.RateLimiting.OnRateLimiterRejectedArguments, System.Threading.Tasks.ValueTask>?
Polly.RateLimiting.RateLimiterStrategyOptions.OnRejected.set -> void
Polly.RateLimiting.RateLimiterStrategyOptions.RateLimiter.get -> System.Func<Polly.RateLimiting.RateLimiterArguments, System.Threading.Tasks.ValueTask<System.Threading.RateLimiting.RateLimitLease!>>?
Polly.RateLimiting.RateLimiterStrategyOptions.RateLimiter.set -> void
Polly.RateLimiting.RateLimiterStrategyOptions.RateLimiterStrategyOptions() -> void
static Polly.RateLimiterResiliencePipelineBuilderExtensions.AddConcurrencyLimiter<TBuilder>(this TBuilder! builder, int permitLimit, int queueLimit = 0) -> TBuilder!
static Polly.RateLimiterResiliencePipelineBuilderExtensions.AddConcurrencyLimiter<TBuilder>(this TBuilder! builder, System.Threading.RateLimiting.ConcurrencyLimiterOptions! options) -> TBuilder!
static Polly.RateLimiterResiliencePipelineBuilderExtensions.AddRateLimiter<TBuilder>(this TBuilder! builder, Polly.RateLimiting.RateLimiterStrategyOptions! options) -> TBuilder!
static Polly.RateLimiterResiliencePipelineBuilderExtensions.AddRateLimiter<TBuilder>(this TBuilder! builder, System.Threading.RateLimiting.RateLimiter! limiter) -> TBuilder!
